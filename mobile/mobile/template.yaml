AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  mobile

Parameters:
  Environment:
    Type: String
    Default: "development"
  DBHOST:
    Type: String
  DBNAME:
    Type: String
  DBUSER:
    Type: String
  DBPASSWORD:
    Type: String
  REGION:
    Type: String

Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "${AWS::StackName}-UserPool"
      AutoVerifiedAttributes: []
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
      LambdaConfig:
        PostConfirmation: !GetAtt PostConfirmationFunction.Arn

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub "${AWS::StackName}-UserPoolClient"
      UserPoolId: !Ref CognitoUserPool
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: $default
      Auth:
        DefaultAuthorizer: CognitoAuthorizer
        Authorizers:
          CognitoAuthorizer:
            JwtConfiguration:
              issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}"
              audience:
                - !Ref CognitoUserPoolClient
            IdentitySource:
              - "$request.header.Authorization"

  AddDeviceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/add-device/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DB_HOST: !Ref DBHOST
          DB_NAME: !Ref DBNAME
          DB_USER: !Ref DBUSER
          DB_PASSWORD: !Ref DBPASSWORD
          REGION: !Ref REGION
          ENV: !Ref Environment
      Events:
        AddDevice:
          Type: HttpApi
          Properties:
            Path: /device/add
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuthorizer

  ListDevicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/list-devices/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DB_HOST: !Ref DBHOST
          DB_NAME: !Ref DBNAME
          DB_USER: !Ref DBUSER
          DB_PASSWORD: !Ref DBPASSWORD
          REGION: !Ref REGION
          ENV: !Ref Environment
      Events:
        ListDevices:
          Type: HttpApi
          Properties:
            Path: /device/list
            Method: get
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuthorizer

  PostConfirmationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./cognito-client/
      Handler: signup.sign_up
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 15
      Environment:
        Variables:
          DB_HOST: !Ref DBHOST
          DB_NAME: !Ref DBNAME
          DB_USER: !Ref DBUSER
          DB_PASSWORD: !Ref DBPASSWORD
          DB_PORT: "5432"
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"

  PostConfirmationPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PostConfirmationFunction.Arn
      Action: lambda:InvokeFunction
      Principal: cognito-idp.amazonaws.com
      SourceArn: !GetAtt CognitoUserPool.Arn

Outputs:
  CognitoUserPoolId:
    Description: "ID of the Cognito User Pool"
    Value: !Ref CognitoUserPool

  CognitoUserPoolClientId:
    Description: "ID of the Cognito User Pool Client"
    Value: !Ref CognitoUserPoolClient

  AddDeviceApi:
    Description: "API Gateway endpoint for POST /device/add"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/device/add"

  ListDevicesApi:
    Description: "API Gateway endpoint for GET /device/list"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/device/list"
