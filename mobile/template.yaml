AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  mobile

Parameters:
  Environment:
    Type: String
    Default: "development"
  DBHOST:
    Type: String
  DBNAME:
    Type: String
  DBUSER:
    Type: String
  DBPASSWORD:
    Type: String
  REGION:
    Type: String
  COGNITOCLIENTID:
    Type: String
  COGNITOPOOLID:
    Type: String

Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "${AWS::StackName}-UserPool"
      AutoVerifiedAttributes: []
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Sub "${AWS::StackName}-UserPoolClient"
      UserPoolId: !Ref CognitoUserPool
      ExplicitAuthFlows:
        - ALLOW_USER_SRP_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      GenerateSecret: false

  HttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: $default
      Auth:
        Authorizers:
          CognitoAuth:
            IdentitySource: "$request.header.Authorization"
            JwtConfiguration:
              issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${COGNITOPOOLID}"
              audience:
                - !Ref COGNITOCLIENTID
        DefaultAuthorizer: CognitoAuth
      

  SignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/signup/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
               - cognito-idp:AdminConfirmSignUp
               - cognito-idp:AdminUpdateUserAttributes
               - cognito-idp:SignUp
              Resource: "*"
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"


      Environment:
        Variables:
          DBHOST: !Ref DBHOST
          DBNAME: !Ref DBNAME
          DBUSER: !Ref DBUSER
          DBPASSWORD: !Ref DBPASSWORD
          REGION: !Ref REGION
          ENV: !Ref Environment
          COGNITOCLIENTID: !Ref COGNITOCLIENTID
          COGNITOPOOLID: !Ref COGNITOPOOLID
      Events:
        SignUp:
          Type: HttpApi
          Properties:
            Path: /user/signup
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: NONE 

  AddDeviceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/add-device/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 15
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DBHOST: !Ref DBHOST
          DBNAME: !Ref DBNAME
          DBUSER: !Ref DBUSER
          DBPASSWORD: !Ref DBPASSWORD
          REGION: !Ref REGION
          ENV: !Ref Environment
          COGNITOCLIENTID: !Ref COGNITOCLIENTID
          COGNITOPOOLID: !Ref COGNITOPOOLID
      Events:
        AddDevice:
          Type: HttpApi
          Properties:
            Path: /device/add
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuth
                       

  ListDevicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/list-devices/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 30
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DBHOST: !Ref DBHOST
          DBNAME: !Ref DBNAME
          DBUSER: !Ref DBUSER
          DBPASSWORD: !Ref DBPASSWORD
          REGION: !Ref REGION
          ENV: !Ref Environment
          COGNITOCLIENTID: !Ref COGNITOCLIENTID
          COGNITOPOOLID: !Ref COGNITOPOOLID
      Events:
        ListDevices:
          Type: HttpApi
          Properties:
            Path: /device/list
            Method: get
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuth


  DeleteDeviceFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/delete-device/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 15
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DB_HOST: !Ref DBHOST
          DB_NAME: !Ref DBNAME
          DB_USER: !Ref DBUSER
          DB_PASSWORD: !Ref DBPASSWORD
          REGION: !Ref REGION
          COGNITO_USER_POOL_ID: !Ref COGNITOPOOLID
          COGNITO_APP_CLIENT_ID: !Ref COGNITOCLIENTID
          ENV: !Ref Environment
      Events:
        DeleteDevice:
          Type: HttpApi
          Properties:
            Path: /device/delete
            Method: post
            ApiId: !Ref HttpApi

  GetDeviceStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/get-device-status/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 10
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DBHOST: !Ref DBHOST
          DBNAME: !Ref DBNAME
          DBUSER: !Ref DBUSER
          DBPASSWORD: !Ref DBPASSWORD
          DBPORT: "5432"
          REGION: !Ref REGION
      Events:
        GetDeviceStatus:
          Type: HttpApi
          Properties:
            Path: /device/status
            Method: get
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuth

  ForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/forgot-password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 10
      Environment:
        Variables:
          REGION: !Ref REGION
          COGNITOCLIENTID: !Ref COGNITOCLIENTID
      Events:
        ForgotPassword:
          Type: HttpApi
          Properties:
            Path: /user/forgot-password
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: NONE


  ConfirmForgotPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/confirm-forgot-password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 10
      Environment:
        Variables:
          COGNITOCLIENTID: !Ref COGNITOCLIENTID
          REGION: !Ref REGION
      Events:
        ConfirmForgotPassword:
          Type: HttpApi
          Properties:
            Path: /user/confirm-forgot-password
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: NONE



  UpdateUserProfileFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/update-user/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 15
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DBHOST: !Ref DBHOST
          DBNAME: !Ref DBNAME
          DBUSER: !Ref DBUSER
          DBPASSWORD: !Ref DBPASSWORD
          DBPORT: "5432"
          REGION: !Ref REGION
          COGNITOCLIENTID: !Ref COGNITOCLIENTID
          COGNITOPOOLID: !Ref COGNITOPOOLID
      Events:
        UpdateUserProfile:
          Type: HttpApi
          Properties:
            Path: /user/update
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuth

  ChangePasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/change-password/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 15
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:ChangePassword
              Resource: "*"
      Environment:
        Variables:
          REGION: !Ref REGION
      Events:
        ChangePassword:
          Type: HttpApi
          Properties:
            Path: /user/change-password
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuth


  DeviceUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/device-update/
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      Timeout: 15
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - rds-db:connect
              Resource: "*"
      Environment:
        Variables:
          DBHOST: !Ref DBHOST
          DBNAME: !Ref DBNAME
          DBUSER: !Ref DBUSER
          DBPASSWORD: !Ref DBPASSWORD
          DBPORT: "5432"
          REGION: !Ref REGION
      Events:
        DeviceUpdate:
          Type: HttpApi
          Properties:
            Path: /device/update
            Method: post
            ApiId: !Ref HttpApi
            Auth:
              Authorizer: CognitoAuth

  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: cognito-client/
      Handler: login.lambda_handler
      Runtime: python3.12
      Timeout: 15
      Environment:
        Variables:
          COGNITOCLIENTID: !Ref COGNITOCLIENTID
          COGNITOPOOLID:  !Ref COGNITOPOOLID
          REGION:         !Ref REGION
          DBHOST:         !Ref DBHOST
          DBNAME:         !Ref DBNAME
          DBUSER:         !Ref DBUSER
          DBPASSWORD:     !Ref DBPASSWORD
      Events:
        Login:
          Type: HttpApi
          Properties:
            Path: /login
            Method: post
            ApiId: !Ref HttpApi


Outputs:
  CognitoUserPoolId:
    Description: "ID of the Cognito User Pool"
    Value: !Ref CognitoUserPool

  CognitoUserPoolClientId:
    Description: "ID of the Cognito User Pool Client"
    Value: !Ref CognitoUserPoolClient

  AddDeviceApi:
    Description: "API Gateway endpoint for POST /device/add"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/device/add"

  ListDevicesApi:
    Description: "API Gateway endpoint for GET /device/list"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/device/list"

  SignUpFunctionApi:
    Description: "API Gateway endpoint for POST /user/signup"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/user/signup"

  DeleteDeviceApi:
    Description: "API Gateway endpoint for POST /device/delete"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/device/delete"

  GetDeviceStatusApi:
    Description: "API Gateway endpoint for GET /device/status"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/device/status"

  ForgotPasswordApi:
    Description: "API Gateway endpoint for POST /user/forgot-password"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/user/forgot-password"

  ConfirmForgotPasswordApi:
    Description: "API Gateway endpoint for POST /user/confirm-forgot-password"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/user/confirm-forgot-password"

  UpdateUserProfileApi:
    Description: "API Gateway endpoint for POST /user/update"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/user/update"

  ChangePasswordApi:
    Description: "API Gateway endpoint for POST /user/change-password"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/user/change-password"

  DeviceUpdateApi:
    Description: "API Gateway endpoint for POST /device/update"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/device/update"

  LoginApi:
    Description: "API Gateway endpoint for LoginFunction"
    Value: !Sub "https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com/login"


